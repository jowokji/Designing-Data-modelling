-- 1. Create the following staging tables:
CREATE TABLE STAGING_ORDER_DETAILS (
    ORDERID     INT NOT NULL,
    PRODUCTID   INT NOT NULL,
    UNITPRICE   DECIMAL(10, 2) NOT NULL,
    QTY         SMALLINT NOT NULL,
    DISCOUNT    DECIMAL(10, 2) NOT NULL
);

CREATE TABLE STAGING_CUSTOMERS (
    CUSTID       SERIAL PRIMARY KEY NOT NULL,
    COMPANYNAME  VARCHAR(40) NOT NULL,
    CONTACTNAME  VARCHAR(30) NULL,
    CONTACTTITLE VARCHAR(30) NULL,
    ADDRESS      VARCHAR(60) NULL,
    CITY         VARCHAR(15) NULL,
    REGION       VARCHAR(15) NULL,
    POSTALCODE   VARCHAR(10) NULL,
    COUNTRY      VARCHAR(15) NULL,
    PHONE        VARCHAR(24) NULL,
    FAX          VARCHAR(24) NULL
);

CREATE TABLE STAGING_EMPLOYEES (
     EMPID      SERIAL  PRIMARY KEY NOT NULL, 
     LASTNAME        VARCHAR (20) NOT NULL, 
     FIRSTNAME       VARCHAR (10) NOT NULL, 
     TITLE           VARCHAR (30) NULL, 
     TITLEOFCOURTESY VARCHAR (25) NULL, 
     BIRTHDATE       TIMESTAMP NULL, 
     HIREDATE        TIMESTAMP NULL, 
     ADDRESS         VARCHAR (60) NULL, 
     CITY            VARCHAR (15) NULL, 
     REGION          VARCHAR (15) NULL, 
     POSTALCODE      VARCHAR (10) NULL, 
     COUNTRY         VARCHAR (15) NULL, 
     PHONE       VARCHAR (24) NULL, 
     EXTENSION       VARCHAR (4) NULL, 
     PHOTO           BYTEA NULL, 
     NOTES           TEXT NULL, 
     MGRID       INT NULL, 
     PHOTOPATH       VARCHAR (255) NULL
);

CREATE TABLE STAGING_PRODUCTS (
    PRODUCTID       SERIAL PRIMARY KEY NOT NULL,
    PRODUCTNAME     VARCHAR(40) NOT NULL,
    SUPPLIERID      INT NULL,
    CATEGORYID      INT NULL,
    QUANTITYPERUNIT VARCHAR(20) NULL,
    UNITPRICE       DECIMAL(10, 2) NULL,
    UNITSINSTOCK    SMALLINT NULL,
    UNITSONORDER    SMALLINT NULL,
    REORDERLEVEL    SMALLINT NULL,
    DISCONTINUED    CHAR(1) NOT NULL
);

CREATE TABLE STAGING_CATEGORIES (
    CATEGORYID   SERIAL PRIMARY KEY NOT NULL,
    CATEGORYNAME VARCHAR(15) NOT NULL,
    DESCRIPTION  TEXT NULL,
    PICTURE      BYTEA NULL
);

CREATE TABLE STAGING_SHIPPERS (
    SHIPPERID   SERIAL PRIMARY KEY NOT NULL,
    COMPANYNAME VARCHAR(40) NOT NULL,
    PHONE       VARCHAR(44) NULL
);

CREATE TABLE STAGING_SUPPLIERS (
    SUPPLIERID   SERIAL PRIMARY KEY NOT NULL,
    COMPANYNAME  VARCHAR(40) NOT NULL,
    CONTACTNAME  VARCHAR(30) NULL,
    CONTACTTITLE VARCHAR(30) NULL,
    ADDRESS      VARCHAR(60) NULL,
    CITY         VARCHAR(15) NULL,
    REGION       VARCHAR(15) NULL,
    POSTALCODE   VARCHAR(10) NULL,
    COUNTRY      VARCHAR(15) NULL,
    PHONE        VARCHAR(24) NULL,
    FAX          VARCHAR(24) NULL,
    HOMEPAGE     TEXT NULL
);

CREATE TABLE STAGING_ORDERS (
    ORDERID        SERIAL PRIMARY KEY NOT NULL,
    CUSTID         VARCHAR(15) NULL,
    EMPID          INT NULL,
    ORDERDATE      TIMESTAMP NULL,
    REQUIREDDATE   TIMESTAMP NULL,
    SHIPPEDDATE    TIMESTAMP NULL,
    SHIPPERID      INT NULL,
    FREIGHT        DECIMAL(10, 2) NULL,
    SHIPNAME       VARCHAR(40) NULL,
    SHIPADDRESS    VARCHAR(60) NULL,
    SHIPCITY       VARCHAR(15) NULL,
    SHIPREGION     VARCHAR(15) NULL,
    SHIPPOSTALCODE VARCHAR(10) NULL,
    SHIPCOUNTRY    VARCHAR(15) NULL
);

-- 2. Use the proposed set of dimension tables and their respective columns and the table FACTSALES.
CREATE TABLE DIMDATE (
    DATEID SERIAL PRIMARY KEY,
    DATE DATE,
    DAY INT,
    MONTH INT,
    YEAR INT,
    QUARTER INT,
    WEEKOFYEAR INT
);

CREATE TABLE DIMCUSTOMER (
    CUSTOMERID SERIAL PRIMARY KEY,
    COMPANYNAME VARCHAR(255),
    CONTACTNAME VARCHAR(255),
    CONTACTTITLE VARCHAR(255),
    ADDRESS VARCHAR(255),
    CITY VARCHAR(255),
    REGION VARCHAR(255),
    POSTALCODE VARCHAR(10),
    COUNTRY VARCHAR(255),
    PHONE VARCHAR(20)
);

CREATE TABLE DIMPRODUCT (
    PRODUCTID SERIAL PRIMARY KEY,
    PRODUCTNAME VARCHAR(255),
    SUPPLIERID INT,
    CATEGORYID INT,
    QUANTITYPERUNIT VARCHAR(255),
    UNITPRICE DECIMAL(10, 2),
    UNITSINSTOCK INT
);

CREATE TABLE DIMEMPLOYEE (
    EMPLOYEEID SERIAL PRIMARY KEY,
    LASTNAME VARCHAR(255),
    FIRSTNAME VARCHAR(255),
    TITLE VARCHAR(255),
    BIRTHDATE DATE,
    HIREDATE DATE,
    ADDRESS VARCHAR(255),
    CITY VARCHAR(255),
    REGION VARCHAR(255),
    POSTALCODE VARCHAR(10),
    COUNTRY VARCHAR(255),
    HOMEPHONE VARCHAR(20),
    EXTENSION VARCHAR(10)
);

CREATE TABLE DIMCATEGORY (
    CATEGORYID SERIAL PRIMARY KEY,
    CATEGORYNAME VARCHAR(255),
    DESCRIPTION TEXT
);

CREATE TABLE DIMSHIPPER (
    SHIPPERID SERIAL PRIMARY KEY,
    COMPANYNAME VARCHAR(255),
    PHONE VARCHAR(20)
);

CREATE TABLE DIMSUPPLIER (
    SUPPLIERID SERIAL PRIMARY KEY,
    COMPANYNAME VARCHAR(255),
    CONTACTNAME VARCHAR(255),
    CONTACTTITLE VARCHAR(255),
    ADDRESS VARCHAR(255),
    CITY VARCHAR(255),
    REGION VARCHAR(255),
    POSTALCODE VARCHAR(10),
    COUNTRY VARCHAR(255),
    PHONE VARCHAR(20)
);

CREATE TABLE FACTSALES (
    SALESID SERIAL PRIMARY KEY,
    DATEID INT,
    CUSTOMERID INT,
    PRODUCTID INT,
    EMPLOYEEID INT,
    CATEGORYID INT,
    SHIPPERID INT,
    SUPPLIERID INT,
    QUANTITYSOLD INT,
    UNITPRICE DECIMAL(10, 2),
    DISCOUNT DECIMAL(10, 2),
    TOTALAMOUNT DECIMAL(10, 2),
    TAXAMOUNT DECIMAL(10, 2),
    FOREIGN KEY (DATEID) REFERENCES DIMDATE(DATEID),
    FOREIGN KEY (CUSTOMERID) REFERENCES DIMCUSTOMER(CUSTOMERID),
    FOREIGN KEY (PRODUCTID) REFERENCES DIMPRODUCT(PRODUCTID),
    FOREIGN KEY (EMPLOYEEID) REFERENCES DIMEMPLOYEE(EMPLOYEEID),
    FOREIGN KEY (CATEGORYID) REFERENCES DIMCATEGORY(CATEGORYID),
    FOREIGN KEY (SHIPPERID) REFERENCES DIMSHIPPER(SHIPPERID),
    FOREIGN KEY (SUPPLIERID) REFERENCES DIMSUPPLIER(SUPPLIERID)
);

-- Load data into staging, transformation, and star schema
-- 1. For each source table in the NORTHWIND_PG database, you need to create a corresponding staging table and load data into it. 
INSERT INTO STAGING_ORDERS 
SELECT * FROM SALESORDER;

INSERT INTO STAGING_ORDER_DETAILS 
SELECT * FROM ORDERDETAIL;

INSERT INTO STAGING_PRODUCTS 
SELECT * FROM PRODUCT;

INSERT INTO STAGING_CUSTOMERS 
SELECT * FROM CUSTOMER;

INSERT INTO STAGING_EMPLOYEES 
SELECT * FROM EMPLOYEE;

INSERT INTO STAGING_CATEGORIES 
SELECT * FROM CATEGORY;

INSERT INTO STAGING_SHIPPERS 
SELECT * FROM SHIPPER;

INSERT INTO STAGING_SUPPLIERS 
SELECT * FROM SUPPLIER;

-- 3. Transform the data from the staging tables and load it into the respective dimension tables
INSERT INTO DIMPRODUCT (PRODUCTID, PRODUCTNAME, SUPPLIERID, CATEGORYID, QUANTITYPERUNIT, UNITPRICE, UNITSINSTOCK)
SELECT PRODUCTID, PRODUCTNAME, SUPPLIERID, CATEGORYID, QUANTITYPERUNIT, UNITPRICE, UNITSINSTOCK
FROM STAGING_PRODUCTS;

INSERT INTO DIMCUSTOMER (CUSTOMERID, COMPANYNAME, CONTACTNAME, CONTACTTITLE, ADDRESS, CITY, REGION, POSTALCODE, COUNTRY, PHONE) 
SELECT CUSTID, COMPANYNAME, CONTACTNAME, CONTACTTITLE, ADDRESS, CITY, REGION, POSTALCODE, COUNTRY, PHONE 
FROM STAGING_CUSTOMERS;

INSERT INTO DIMCATEGORY (CATEGORYID, CATEGORYNAME, DESCRIPTION)
SELECT CATEGORYID, CATEGORYNAME, DESCRIPTION
FROM STAGING_CATEGORIES;

INSERT INTO DIMEMPLOYEE (EMPLOYEEID, LASTNAME, FIRSTNAME, TITLE, BIRTHDATE, HIREDATE, ADDRESS, CITY, REGION, POSTALCODE, COUNTRY, HOMEPHONE, EXTENSION)
SELECT EMPID, LASTNAME, FIRSTNAME, TITLE, BIRTHDATE, HIREDATE, ADDRESS, CITY, REGION, POSTALCODE, COUNTRY, PHONE, EXTENSION
FROM STAGING_EMPLOYEES;

INSERT INTO DIMSHIPPER (SHIPPERID, COMPANYNAME, PHONE)
SELECT SHIPPERID, COMPANYNAME, PHONE
FROM STAGING_SHIPPERS;

INSERT INTO DIMSUPPLIER (SUPPLIERID, COMPANYNAME, CONTACTNAME, CONTACTTITLE, ADDRESS, CITY, REGION, POSTALCODE, COUNTRY, PHONE)
SELECT SUPPLIERID, COMPANYNAME, CONTACTNAME, CONTACTTITLE, ADDRESS, CITY, REGION, POSTALCODE, COUNTRY, PHONE
FROM STAGING_SUPPLIERS;

INSERT INTO DIMDATE (DATE, DAY, MONTH, YEAR, QUARTER, WEEKOFYEAR)
SELECT DISTINCT ORDERDATE, EXTRACT(DAY FROM ORDERDATE), EXTRACT(MONTH FROM ORDERDATE), EXTRACT(YEAR FROM ORDERDATE), 
                EXTRACT(QUARTER FROM ORDERDATE), EXTRACT(WEEK FROM ORDERDATE)
FROM STAGING_ORDERS;

-- Insert data into FACTSALES from staging tables with necessary transformations
INSERT INTO FACTSALES (DATEID, CUSTOMERID, PRODUCTID, EMPLOYEEID, CATEGORYID, SHIPPERID, SUPPLIERID, QUANTITYSOLD, UNITPRICE, DISCOUNT, TOTALAMOUNT, TAXAMOUNT)
SELECT D.DATEID, C.CUSTOMERID, P.PRODUCTID, E.EMPLOYEEID, CT.CATEGORYID, S.SHIPPERID, SUP.SUPPLIERID, O.QTY, O.UNITPRICE, O.DISCOUNT, 
       (O.QTY * O.UNITPRICE) - (O.QTY * O.UNITPRICE * O.DISCOUNT), ((O.QTY * O.UNITPRICE) - (O.QTY * O.UNITPRICE * O.DISCOUNT)) * 0.05
FROM STAGING_ORDER_DETAILS O
JOIN STAGING_ORDERS SO ON O.ORDERID = SO.ORDERID
JOIN DIMDATE D ON SO.ORDERDATE = D.DATE
JOIN DIMCUSTOMER C ON SO.CUSTID = C.CUSTOMERID
JOIN DIMPRODUCT P ON O.PRODUCTID = P.PRODUCTID
JOIN DIMEMPLOYEE E ON SO.EMPID = E.EMPLOYEEID
JOIN DIMCATEGORY CT ON P.CATEGORYID = CT.CATEGORYID
JOIN DIMSHIPPER S ON SO.SHIPPERID = S.SHIPPERID
JOIN DIMSUPPLIER SUP ON P.SUPPLIERID = SUP.SUPPLIERID;
